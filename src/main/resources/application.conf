httpPort = 8080

akka {
  coordinated-shutdown.exit-jvm = on

  actor {
    provider = cluster

    serialization-bindings {
      "io.scalac.auction.CborSerializable" = jackson-cbor
    }
  }

  remote.artery.canonical {
    hostname = "127.0.0.1"
    port = 25520
  }

  persistence {
    journal {
      plugin = "jdbc-journal",
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store",
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }

  cluster {
    seed-nodes = [
      "akka://AuctionHouse@127.0.0.1:25520"
    ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    jmx.multi-mbeans-in-same-jvm = on
  }
}

jdbc-journal.slick = ${slick}
jdbc-snapshot-store.slick = ${slick}
jdbc-read-journal.slick = ${slick}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    host = ${?DB_HOST}
    url = "jdbc:postgresql://"${slick.db.host}":5432/auction_house?reWriteBatchedInserts=true"
    user = "postgres"
    password = "postgres"
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}

jwt {
  secret = WIzPezjsJIot3gxCCuq3hadgD4wRWkKJ
  expiresIn = 7 days
}
